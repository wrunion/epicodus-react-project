{"version":3,"sources":["actions/constants.js","actions/index.js","components/Item.js","components/ItemControl.js","components/ItemDetail.js","components/Form.js","components/FormControl.js","components/Footer.js","components/App.js","reducers/index.js","reducers/itemListReducer.js","reducers/handleClickReducer.js","reducers/formReducer.js","index.js"],"names":["ADD_ITEM","EDIT_ITEM","DELETE_ITEM","SELECT_ITEM","UNSELECT_ITEM","SHOW_FORM","HIDE_FORM","addItem","item","type","constants","data","Item","props","itemName","description","available","price","id","className","key","onClick","purchaseClickCallback","deleteClickCallback","detailsClickCallback","ItemControl","componentDidMount","initialItemList","itemList","forEach","purchaseClick","updatedItem","editItem","deleteClick","deleteItem","selectItem","detailsClick","this","length","map","Component","connect","state","ItemDetail","handleClick","Form","v4","onSubmit","e","preventDefault","handleSubmitCallback","target","value","parseInt","handleCancelClick","name","defaultValue","min","FormControl","hideForm","handleSubmit","formShowing","showForm","React","formReducer","Footer","href","rel","selectedItem","unselectItem","rootReducer","combineReducers","action","filter","SELECT_ITEM_TO_EDIT","Object","assign","itemToEdit","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5600e5e1.chunk.js","sourcesContent":["export default {\n  ADD_ITEM: 'ADD_ITEM', \n  EDIT_ITEM: 'EDIT_ITEM',\n  DELETE_ITEM: 'DELETE_ITEM',\n  SELECT_ITEM: 'SELECT_ITEM',\n  UNSELECT_ITEM: 'UNSELECT_ITEM',\n  SHOW_FORM: 'SHOW_FORM',\n  HIDE_FORM: 'HIDE_FORM'\n}","import constants from './constants';\n\n/* Actions for itemListReducer */\nexport const addItem = (item) => {\n  return {\n    type: constants.ADD_ITEM,\n    data: item\n  };\n};\nexport const editItem = (item) => {\n  return {\n    type: constants.EDIT_ITEM,\n    data: item\n  };\n};\nexport const deleteItem = (item) => {\n  return {\n    type: constants.DELETE_ITEM,\n    data: item\n  };\n};\n\n/* Actions for handleClickReducer */\nexport const selectItem = (item) => {\n  return {\n    type: constants.SELECT_ITEM,\n    data: item\n  };\n};\n\nexport const unselectItem = () => {\n  return {\n    type: constants.UNSELECT_ITEM\n  }\n}\n\n/* Actions for formReducer */\nexport const showForm = () => {\n  return {\n    type: constants.SHOW_FORM\n  };\n};\n\nexport const hideForm = () => {\n  return {\n    type: constants.HIDE_FORM\n  };\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Item = (props) => {\n\n  const { itemName, description, available, price, id } = props.item;\n\n  return (\n    <div className=\"Item ui segment\" key={id}>\n    <h3>{itemName}</h3>\n      <p><em>{description}</em></p>\n      <p>Available: {available} | Price: ${price}</p>\n      <button id={id} onClick={() => props.purchaseClickCallback(props.item)} className=\"ui mini green button basic\">Purchase</button>\n      <button id={id} onClick={() => props.deleteClickCallback(props.item)} className=\"ui mini red button basic\">Delete</button>\n      <button onClick={() => props.detailsClickCallback(props.item)} className=\"ui mini grey button basic\">View Details</button>\n    </div>\n  );\n}\n\nItem.propTypes = {\n  itemName: PropTypes.string,\n  description: PropTypes.string,\n  available: PropTypes.number,\n  price: PropTypes.number,\n  id: PropTypes.string,\n  purchaseClickCallback: PropTypes.func,\n  deleteClickCallback: PropTypes.func,\n  detailsClickCallback: PropTypes.func\n} \n\nexport default Item;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport Item from './Item';\nimport initialItemList from '../itemlist.json';\nimport { addItem, deleteItem, selectItem, editItem } from './../actions';\n\nclass ItemControl extends Component {\n\n  /* Load the initial data on startup */\n  componentDidMount = () => {\n    initialItemList.itemList.forEach((item) => {\n      this.props.addItem(item)\n    });\n  }\n\n  /* Callback functions for the Item components */\n  purchaseClick = (item) => {\n    const updatedItem = { ...item};\n    updatedItem.available > 1 ? \n      updatedItem.available = updatedItem.available -1\n      : updatedItem.available = 0;   \n    this.props.editItem(updatedItem);\n  }\n\n  deleteClick = (item) => {\n    this.props.deleteItem(item);\n    this.props.selectItem(null);\n  }\n\n  detailsClick = (item) => {\n    this.props.selectItem(item);\n  }\n\n  render() {\n\n  const { itemList } = this.props;\n  \n    if (itemList.length > 0) {\n      return (\n        <div className=\"ItemControl scroll-box\">\n        {this.props.itemList.map(item =>\n          <Item item={item}\n            key={item.id}\n            purchaseClickCallback={this.purchaseClick}\n            deleteClickCallback={this.deleteClick}\n            detailsClickCallback={this.detailsClick}\n            />)}\n        </div>    \n        );\n    /* If itemList is empty */  \n    } else {\n      return (\n        <div className=\"DefaultView\">\n          <h2>There are no items to display.</h2>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    itemList: state.itemList\n  }\n}\n\nexport default connect(mapStateToProps, { addItem, deleteItem, selectItem, editItem })(ItemControl);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nconst ItemDetail = (props) => {\n  /* If no item is selected */\n  if (props.item === null) {\n    return (\n      <div className=\"NoItemDisplay ui segment\">\n        <p>Choose an item for a detailed view</p>\n      </div>\n    );\n  } else {\n    /* Grab item properties */\n    const { itemName, description } = props.item;\n    \n    return (\n      <div className=\"ItemDetail ui segment\">\n        <h1>{itemName}</h1>\n        <p><em>{description}</em></p>\n        &#x2713; Gluten Free <br/>\n        &#x2713; Vegan <br />\n        &#x2713; Organic <br />\n        &#x2713; Fair Trade <br />\n        <h5>Made in Oregon</h5>\n        <button className=\"ui button mini grey basic\" onClick={() => {props.handleClick()}}>Cancel</button>\n      </div>\n    );\n  }\n}\n\nItemDetail.propTypes = {\n  item: PropTypes.object,\n  itemName: PropTypes.string,\n  description: PropTypes.string,\n  handleClick: PropTypes.func\n} \n\nexport default ItemDetail;","import React from 'react'\nimport {v4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nfunction Form(props) {\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.handleSubmitCallback({\n      itemName: e.target.itemName.value, \n      description: e.target.description.value, \n      available: parseInt(e.target.available.value), \n      price: parseInt(e.target.price.value), \n      id: e.target.id});\n    props.handleCancelClick();  \n  } \n\n  return (\n    <div className=\"Form\">\n      <form id={v4()} onSubmit={handleSubmit} className=\"ui small form segment\">\n        <div className=\"inputField inline field\">\n          <label>Item Name:</label>\n          <input type=\"text\" name=\"itemName\" id=\"itemName\" defaultValue=\"Green Tea\" />\n        </div>\n        <div className=\"inputField inline field\">\n          <label>Description:</label>\n          <input type=\"text\" name=\"description\" id=\"description\" defaultValue=\"Healthy and Delicious\" />\n        </div>\n        <div className=\"inputField inline field\">\n          <label>Price:</label>\n          <input type=\"number\" name=\"price\" price=\"price\" defaultValue={15} min={0}/>\n        </div>\n        <div className=\"inputField inline field\">\n          <label>Available: </label>\n          <input type=\"number\" name=\"available\" price=\"available\" min={0} defaultValue={25} />\n        </div>\n        <button type=\"submit\" className=\"ui button mini green basic\">Add Item</button>\n        <button type=\"button\" className=\"ui button mini grey basic\" onClick={props.handleCancelClick}>Cancel</button>\n      </form>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  handleSubmitCallback: PropTypes.func,\n  handleCancelClick: PropTypes.func\n};\n\nexport default Form;","import React from 'react'\nimport { connect } from 'react-redux';import PropTypes from 'prop-types';\nimport { showForm, hideForm, addItem } from './../actions';\nimport Form from './Form';\n\nclass FormControl extends React.Component {\n\n  handleCancelClick = () => {\n    this.props.hideForm(); \n  }\n  \n  handleSubmit = (item) => {\n    this.props.addItem(item);\n  }\n\n  render() {\n    return ( \n      <div className=\"FormControl\">\n        {this.props.formShowing\n        ? <Form \n            handleCancelClick={this.handleCancelClick}\n            handleSubmitCallback={this.handleSubmit}/> \n        : <button \n            onClick={() => this.props.showForm()}\n            className=\"ui button small basic green fluid\">\n            Add Item</button>}\n      </div>\n    );\n  }\n}\n\nFormControl.propTypes = {\n  showForm: PropTypes.func,\n  hideForm: PropTypes.func,\n  addItem: PropTypes.func,\n  formShowing: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  return {\n    formShowing: state.formReducer.formShowing\n  }\n}\n\nexport default connect(mapStateToProps, { showForm, hideForm, addItem }) (FormControl);","import React from 'react'\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n    <p>Copyright (c) 2020 |  \n      <a href=\"https://github.com/wrunion\" target=\"_blank\" rel=\"noopener noreferrer\"> Winter A. Runion</a> | \n      <a href=\"https://github.com/wrunion/epicodus-react-project\" target=\"_blank\" rel=\"noopener noreferrer\"> GitHub Source Code</a>\n    </p>\n  </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { unselectItem } from './../actions';\nimport ItemControl from './ItemControl';\nimport ItemDetail from './ItemDetail';\nimport FormControl from './FormControl';\nimport Footer from './Footer';\nimport './App.css';\n\nfunction App(props) {\n  return (\n    <div className=\"App scroll\">\n      <div className=\"Header\">\n        <h1>AunTea's Organics</h1></div>\n      <div className=\"ui container grid scroll\">\n        <div className=\"ui row scroll\">\n          <div className=\"column eight wide scroll\" id=\"scroll-container\">\n            <ItemControl />\n          </div>\n          <div className=\"column eight wide\">\n            <ItemDetail item={props.selectedItem}\n              handleClick={() => props.unselectItem()}/>\n            <FormControl />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    selectedItem: state.handleClick.selectedItem\n  };\n}\n\nexport default connect(mapStateToProps, { unselectItem })(App);","import { combineReducers } from 'redux';\nimport itemListReducer from './itemListReducer';\nimport handleClickReducer from './handleClickReducer';\nimport formReducer from './formReducer';\n\nconst rootReducer = combineReducers({\n  itemList: itemListReducer,\n  handleClick: handleClickReducer,\n  formReducer: formReducer\n})\n\nexport default rootReducer;","import constants from './../actions/constants';\n\nexport default (state = [], action) => {\n  const { type, data } = action;\n\n  switch(type) {\n    case constants.ADD_ITEM:\n      return [data, ...state];\n    case constants.EDIT_ITEM:\n      return state.map(e => e.id === data.id ? data : e);\n    case constants.DELETE_ITEM:\n      return state.filter(e => e.id !== data.id);  \n    default:\n      return state;\n  }\n}","import constants from './../actions/constants';\n\nexport default(state={selectedItem: null}, action) => {\n  switch(action.type) {\n    case constants.SELECT_ITEM_TO_EDIT:\n      return Object.assign({}, state, {itemToEdit: action.data} );\n    case constants.SELECT_ITEM:\n      return Object.assign({}, state, {selectedItem: action.data});\n    case constants.UNSELECT_ITEM:  \n      return Object.assign({}, state, {selectedItem: null});\n  default:\n    return state;\n  }\n}","import constants from './../actions/constants';\n\nexport default(state={formShowing: false}, action) => {\n  const { type } = action;\n\n  switch(type) {\n    case constants.SHOW_FORM:\n      return { formShowing: true };\n    case constants.HIDE_FORM:\n      return { formShowing: false};  \n    default:\n      return state;  \n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}